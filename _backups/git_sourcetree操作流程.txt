git 冲突解决
1. git reset --hard HEAD^ 回滚本地没push的 或者 git reset --hard
2. 删除本地有，而远端没有的分支，先执行 git remote show origin 查看分支不同， git remote prune origin 删除本地分支
3. git branch -D <本地分支> 删除本地分支
4. git rebase --skip 引起冲突的commits会被丢弃
5. git rebase --abort 本地内容会回到提交之间的状态，也就是回到以前提交但没有pull是的状态，简单来说就是撤销rebase

git remote -v 查看远程状态
git status -sb 查看状态
git fetch <远端主机名> 取远端到本地
git fetch origin

git fetch <远端主机名> <分支名> 取某个分支的远端到本地
git fetch origin master 

git push的操作流程
1.先 pull
git pull <远端主机名> <远端分支名>:<本地分支>
git pull origin login:login

2.有增加的先 add
git add <文件名>
git add xx.html

git rm --cached xx.html 命令来撤销add

3.提交 commit
git commit -m "注释"
单个文件 git commit <文件> -m "注释"

4.提交到远端
git push <远端主机名> <本地分支>:<远端分支名>
git push origin login:origin/login

source tree push操作流程
1. 获取，在获取界面勾选，1全部更新
2. 拉取
3. 解决冲突
4. 提交
5. 推送

命令删除本地分支需要切换到其他分支
1.切分支
git checkout <分支> 
git checkout login

等价于
git checkout -b <本地分支名> <远程分支> 从远端的分支开一个本地新分支
git checkout -b login origin/login

2.删除本地分支
git branch -D <本地分支>
git branch -D master